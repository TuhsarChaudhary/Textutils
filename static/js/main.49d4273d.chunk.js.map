{"version":3,"sources":["Components/Navbar.js","Components/Textform.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","abouttext","onClick","togglemode","role","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showalert","toLowerCase","words","split","uppercaseword","forEach","element","charAt","slice","document","getElementById","select","navigator","clipboard","writeText","length","Alert","alert","word","lower","capitalize","msg","defaultProps","App","setmode","_useState3","_useState4","setalert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.49d4273d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link\" to=\"/about\">{props.abouttext}</Link> */}\r\n            <a className=\"nav-link\" href=\"/about\">{props.abouttext}</a>\r\n          </li>\r\n        </ul>\r\n        {/* <form className=\"d-flex\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable darkmode</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    abouttext: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    abouttext: \"about text here\"\r\n}\r\n\r\n","import React,{useState} from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n    \r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"Handle on change\");\r\n        setText(event.target.value);\r\n    \r\n    }\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showalert(\"Converted to Uppercase!\",\"success\");\r\n    }\r\n    \r\n    const handleLowClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showalert(\"Converted to Lowercase!\",\"success\");\r\n    }\r\n\r\n    const SentenceFirstWordCapital = ()=>{\r\n        let words = text.split(\" \")\r\n       let uppercaseword = ' '\r\n        words.forEach(element => {\r\n           uppercaseword += element.charAt(0).toUpperCase() + element.slice(1) + \" \"\r\n        });\r\n        setText(uppercaseword);\r\n        props.showalert(\"First alphabet is capitalised!\",\"success\");\r\n\r\n    }\r\n\r\n    // const capitalize = ()=> {\r\n    //     let newtext = text.charAt(0).toUpperCase()+ text.slice(1);\r\n    //     console.log(newtext);\r\n    //     setText (newtext )\r\n    // }\r\n\r\n    const clear = ()=>{\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showalert(\"Cleared!\",\"success\");\r\n    }\r\n\r\n\r\n    const copyToClipboard = () => {\r\n        var text = document.getElementById('mybox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showalert(\"Copied to Clipboard!\",\"success\");\r\n        \r\n    };\r\n\r\n    // const [text, setText] = useState('Enter text here');\r\n    const [text, setText] = useState('');\r\n    // text=\"New Text\"; // Wrong way to change the state;\r\n    // setText = (\"New Text\"); // Correct way to chagne the state;\r\n    \r\n  return (\r\n    <>\r\n        <div style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white',color: props.mode==='dark'?'white':'black'}} className=\"form-control\" id=\"mybox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Upper case</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleLowClick}>Convert to Lower case</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={clear}>Clear</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={SentenceFirstWordCapital}>Change capital</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={copyToClipboard}>copy</button>\r\n        </div>\r\n        \r\n        \r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h2>Your Text Summary</h2>\r\n        <p>  {(text.length === 0) ? (text.split(\" \").length - 1) : (text.split(\" \").length) } words and {text.length} characters</p>\r\n        <p> {0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something in the textbox above to Preview it here\"}</p> \r\n        <p></p>\r\n        </div>\r\n    </>\r\n    \r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize= (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg} \r\n        {/* <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\n\r\n","import './App.css';\nimport Navbar from './Components/Navbar';\nimport Textform from './Components/Textform';\n// import About from './Components/About';\nimport React, {useState} from 'react'\nimport Alert from './Components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setmode] = useState('light'); // Whether dark mode is enabled or not\n  const [alert, setalert] = useState(null);\n\n  const showalert = (message, type)=>{\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>{\n      setalert(null);\n    },1500);\n  } \n\n  const togglemode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#042648';\n      showalert(\"Dark mode has been enabled\",\"success\");\n      document.title = \"TextUtils - Dark mode\";\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showalert(\"Light mode has been enabled\",\"success\");\n      document.title = \"TextUtils - Light mode\";\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} togglemode={togglemode}/>\n    <Alert alert={alert}/>\n    {/* <Routes>\n      <Route exact path=\"/about\" element={<About/>}/>   */}\n      {/* <Route exact path=\"/\" element={*/}\n      <Textform showalert={showalert} heading = 'Enter the text to analyze' mode={mode}/>\n    {/* </Routes> */}\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}